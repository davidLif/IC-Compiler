package IC.Parser;

import IC.AST.*;

////////////////////////////////////////////
// Symbol list (terminals and non-terminals)

/* ids */
terminal ID, CLASSID;
/* keywords */
terminal EXTENDS, STATIC, VOID, INT, BOOL, STRING, RETURN, IF, ELSE, WHILE, BREAK, CONTINUE;
terminal THIS, NEW, LENGTH, CLASS;
/* literals */
terminal INTEGER, STRING_LITERAL, FALSE, NULL, TRUE;
/* punctuation */
terminal LP, RP, CRP, CLP, SQUARERB, SQUARELB, DOT, SEMCOL, COMMA;
/* operators */
terminal ADD, MINUS, MULT, DIV, MOD, LESSTHAN, LESSTHANEQ, GREATERTHAN, GREATERTHANEQ, EQ;
terminal NOTEQ, AND, OR, NOT, ASSIGN;


nonterminal Program Program;
nonterminal Literal;


//////////////////////////
// Precedence declarations

//////////////
// The grammar

Literal ::= INTEGER
	;
